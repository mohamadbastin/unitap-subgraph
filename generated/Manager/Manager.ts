// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Manager extends ethereum.SmartContract {
  static bind(address: Address): Manager {
    return new Manager("Manager", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  UNITAP_ROLE(): Bytes {
    let result = super.call("UNITAP_ROLE", "UNITAP_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_UNITAP_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("UNITAP_ROLE", "UNITAP_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  erc20PeriodicMaxCap(param0: Address): BigInt {
    let result = super.call(
      "erc20PeriodicMaxCap",
      "erc20PeriodicMaxCap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_erc20PeriodicMaxCap(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "erc20PeriodicMaxCap",
      "erc20PeriodicMaxCap(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  erc20Periods(param0: Address): BigInt {
    let result = super.call("erc20Periods", "erc20Periods(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_erc20Periods(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "erc20Periods",
      "erc20Periods(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  erc20Withdrawals(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "erc20Withdrawals",
      "erc20Withdrawals(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_erc20Withdrawals(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "erc20Withdrawals",
      "erc20Withdrawals(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ethPeriod(): BigInt {
    let result = super.call("ethPeriod", "ethPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ethPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("ethPeriod", "ethPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ethPeriodicMaxCap(): BigInt {
    let result = super.call(
      "ethPeriodicMaxCap",
      "ethPeriodicMaxCap():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ethPeriodicMaxCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ethPeriodicMaxCap",
      "ethPeriodicMaxCap():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ethTotalWithdrawals(param0: BigInt): BigInt {
    let result = super.call(
      "ethTotalWithdrawals",
      "ethTotalWithdrawals(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_ethTotalWithdrawals(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ethTotalWithdrawals",
      "ethTotalWithdrawals(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActivePeriod(period_: BigInt): BigInt {
    let result = super.call(
      "getActivePeriod",
      "getActivePeriod(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(period_)]
    );

    return result[0].toBigInt();
  }

  try_getActivePeriod(period_: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getActivePeriod",
      "getActivePeriod(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(period_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get period_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get periodicMaxCap_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get admin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get unitap(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class MultiWithdrawErc20Call extends ethereum.Call {
  get inputs(): MultiWithdrawErc20Call__Inputs {
    return new MultiWithdrawErc20Call__Inputs(this);
  }

  get outputs(): MultiWithdrawErc20Call__Outputs {
    return new MultiWithdrawErc20Call__Outputs(this);
  }
}

export class MultiWithdrawErc20Call__Inputs {
  _call: MultiWithdrawErc20Call;

  constructor(call: MultiWithdrawErc20Call) {
    this._call = call;
  }

  get recipients(): Array<MultiWithdrawErc20CallRecipientsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MultiWithdrawErc20CallRecipientsStruct
    >();
  }
}

export class MultiWithdrawErc20Call__Outputs {
  _call: MultiWithdrawErc20Call;

  constructor(call: MultiWithdrawErc20Call) {
    this._call = call;
  }
}

export class MultiWithdrawErc20CallRecipientsStruct extends ethereum.Tuple {
  get token(): Address {
    return this[0].toAddress();
  }

  get to(): Address {
    return this[1].toAddress();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }
}

export class MultiWithdrawEthCall extends ethereum.Call {
  get inputs(): MultiWithdrawEthCall__Inputs {
    return new MultiWithdrawEthCall__Inputs(this);
  }

  get outputs(): MultiWithdrawEthCall__Outputs {
    return new MultiWithdrawEthCall__Outputs(this);
  }
}

export class MultiWithdrawEthCall__Inputs {
  _call: MultiWithdrawEthCall;

  constructor(call: MultiWithdrawEthCall) {
    this._call = call;
  }

  get recipients(): Array<MultiWithdrawEthCallRecipientsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      MultiWithdrawEthCallRecipientsStruct
    >();
  }
}

export class MultiWithdrawEthCall__Outputs {
  _call: MultiWithdrawEthCall;

  constructor(call: MultiWithdrawEthCall) {
    this._call = call;
  }
}

export class MultiWithdrawEthCallRecipientsStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetErc20ParamsCall extends ethereum.Call {
  get inputs(): SetErc20ParamsCall__Inputs {
    return new SetErc20ParamsCall__Inputs(this);
  }

  get outputs(): SetErc20ParamsCall__Outputs {
    return new SetErc20ParamsCall__Outputs(this);
  }
}

export class SetErc20ParamsCall__Inputs {
  _call: SetErc20ParamsCall;

  constructor(call: SetErc20ParamsCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get period_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get periodicMaxCap_(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetErc20ParamsCall__Outputs {
  _call: SetErc20ParamsCall;

  constructor(call: SetErc20ParamsCall) {
    this._call = call;
  }
}

export class SetEthParamsCall extends ethereum.Call {
  get inputs(): SetEthParamsCall__Inputs {
    return new SetEthParamsCall__Inputs(this);
  }

  get outputs(): SetEthParamsCall__Outputs {
    return new SetEthParamsCall__Outputs(this);
  }
}

export class SetEthParamsCall__Inputs {
  _call: SetEthParamsCall;

  constructor(call: SetEthParamsCall) {
    this._call = call;
  }

  get period_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get periodicMaxCap_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetEthParamsCall__Outputs {
  _call: SetEthParamsCall;

  constructor(call: SetEthParamsCall) {
    this._call = call;
  }
}

export class WithdrawErc20Call extends ethereum.Call {
  get inputs(): WithdrawErc20Call__Inputs {
    return new WithdrawErc20Call__Inputs(this);
  }

  get outputs(): WithdrawErc20Call__Outputs {
    return new WithdrawErc20Call__Outputs(this);
  }
}

export class WithdrawErc20Call__Inputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawErc20Call__Outputs {
  _call: WithdrawErc20Call;

  constructor(call: WithdrawErc20Call) {
    this._call = call;
  }
}

export class WithdrawEthCall extends ethereum.Call {
  get inputs(): WithdrawEthCall__Inputs {
    return new WithdrawEthCall__Inputs(this);
  }

  get outputs(): WithdrawEthCall__Outputs {
    return new WithdrawEthCall__Outputs(this);
  }
}

export class WithdrawEthCall__Inputs {
  _call: WithdrawEthCall;

  constructor(call: WithdrawEthCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawEthCall__Outputs {
  _call: WithdrawEthCall;

  constructor(call: WithdrawEthCall) {
    this._call = call;
  }
}
